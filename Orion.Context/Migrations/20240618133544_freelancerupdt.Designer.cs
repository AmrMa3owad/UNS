// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Orion.Context;

#nullable disable

namespace Orion.Context.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240618133544_freelancerupdt")]
    partial class freelancerupdt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CustomerEvent", b =>
                {
                    b.Property<int>("CustomersUserId")
                        .HasColumnType("integer");

                    b.Property<int>("EventsId")
                        .HasColumnType("integer");

                    b.HasKey("CustomersUserId", "EventsId");

                    b.HasIndex("EventsId");

                    b.ToTable("CustomerEvent");
                });

            modelBuilder.Entity("Orion.Domain.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("integer");

                    b.Property<int?>("WebsiteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WebsiteId")
                        .IsUnique();

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Orion.Domain.Models.Advertisement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdvertisementPeriod")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AdvertisementType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Advertisements");
                });

            modelBuilder.Entity("Orion.Domain.Models.Booth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BoothCapacity")
                        .HasColumnType("integer");

                    b.Property<int>("BoothNumber")
                        .HasColumnType("integer");

                    b.Property<string>("BoothPlace")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("EventId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .IsUnique();

                    b.ToTable("Booths");
                });

            modelBuilder.Entity("Orion.Domain.Models.BoothOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BoothId")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BoothId");

                    b.HasIndex("OrderId");

                    b.ToTable("BoothOrders");
                });

            modelBuilder.Entity("Orion.Domain.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int>("NumberOfProducts")
                        .HasColumnType("integer");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("Orion.Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("Img")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SubCategory")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Orion.Domain.Models.ContactUs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("integer");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Msg")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("CustomerId");

                    b.ToTable("ContactUs");
                });

            modelBuilder.Entity("Orion.Domain.Models.Craft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CraftName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CraftType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Crafts");
                });

            modelBuilder.Entity("Orion.Domain.Models.Customer", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int?>("DonationId")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("integer");

                    b.Property<int?>("PreCommunityId")
                        .HasColumnType("integer");

                    b.Property<int?>("WebsiteId")
                        .HasColumnType("integer");

                    b.HasKey("UserId");

                    b.HasIndex("DonationId")
                        .IsUnique();

                    b.HasIndex("PaymentId")
                        .IsUnique();

                    b.HasIndex("PreCommunityId");

                    b.HasIndex("WebsiteId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Orion.Domain.Models.CustomerAdvertisement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdvertisementId")
                        .HasColumnType("integer");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisementId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerAdvertisements");
                });

            modelBuilder.Entity("Orion.Domain.Models.CustomerProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("CustomerProducts");
                });

            modelBuilder.Entity("Orion.Domain.Models.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("DeliveryLicense")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DeliveryPhone")
                        .HasColumnType("integer");

                    b.Property<int>("VechileNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("Orion.Domain.Models.DeliveryOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("DeliveryId")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("Place")
                        .HasColumnType("integer");

                    b.Property<double>("ShippingFees")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryId");

                    b.HasIndex("OrderId");

                    b.ToTable("DeliveryOrders");
                });

            modelBuilder.Entity("Orion.Domain.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("DeviceDateOfPurchase")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MaintenanceDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MaintenancePrice")
                        .HasColumnType("integer");

                    b.Property<int?>("OfficeWorkerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AdminId")
                        .IsUnique();

                    b.HasIndex("OfficeWorkerId")
                        .IsUnique();

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Orion.Domain.Models.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("DonationMethod")
                        .HasColumnType("text");

                    b.Property<double>("DonationQuantity")
                        .HasColumnType("double precision");

                    b.Property<string>("DonationTime")
                        .HasColumnType("text");

                    b.Property<string>("DonationType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("Orion.Domain.Models.Employee", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("EmployeeDateOfJoin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmployeeQualifications")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EmployeeSalary")
                        .HasColumnType("integer");

                    b.Property<string>("EmployeeStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmployeeType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Orion.Domain.Models.EmployeeAdmin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdminId")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeAdmin");
                });

            modelBuilder.Entity("Orion.Domain.Models.EmployeeOfficeWorker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<int>("OfficeWorkerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("OfficeWorkerId");

                    b.ToTable("EmployeeOfficeWorker");
                });

            modelBuilder.Entity("Orion.Domain.Models.EmployeeSupervisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<int>("SupervisorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("EmployeeSupervisor");
                });

            modelBuilder.Entity("Orion.Domain.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BoothId")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("EventDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EventPlace")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EventTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Orion.Domain.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdminId")
                        .HasColumnType("integer");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OfficeWorkerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OfficeWorkerId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("Orion.Domain.Models.Freelancer", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("Earnings")
                        .HasColumnType("integer");

                    b.Property<string>("FreelancerType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("OrphanageId")
                        .HasColumnType("integer");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Skill")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("StarPhoto")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("integer");

                    b.HasKey("UserId");

                    b.HasIndex("OrphanageId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Freelancers");
                });

            modelBuilder.Entity("Orion.Domain.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int>("MaterialPrice")
                        .HasColumnType("integer");

                    b.Property<int>("MaterialQuantity")
                        .HasColumnType("integer");

                    b.Property<string>("MaterialType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("Orion.Domain.Models.MaterialVendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer");

                    b.Property<int>("VendorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("VendorId");

                    b.ToTable("MaterialVendors");
                });

            modelBuilder.Entity("Orion.Domain.Models.Mentor", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int?>("CraftId")
                        .HasColumnType("integer");

                    b.Property<string>("MentorArea")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OrphansNumber")
                        .HasColumnType("integer");

                    b.Property<int>("VisitNumber")
                        .HasColumnType("integer");

                    b.HasKey("UserId");

                    b.HasIndex("CraftId");

                    b.ToTable("Mentors");
                });

            modelBuilder.Entity("Orion.Domain.Models.OfficeWorker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("integer");

                    b.Property<string>("OfficeWorkerDepartment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OfficeWorkers");
                });

            modelBuilder.Entity("Orion.Domain.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderAmount")
                        .HasColumnType("integer");

                    b.Property<string>("OrderComments")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OrderDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OrderPrice")
                        .HasColumnType("integer");

                    b.Property<string>("OrderType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Orion.Domain.Models.Orphanage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("OrphanageInfo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("OrphanageLogo")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("OrphanageName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OrphanageRegion")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Orphanages");
                });

            modelBuilder.Entity("Orion.Domain.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int>("PaymentAmount")
                        .HasColumnType("integer");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Orion.Domain.Models.PreCommunity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("PreCommunities");
                });

            modelBuilder.Entity("Orion.Domain.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Above12Id")
                        .HasColumnType("integer");

                    b.Property<int?>("CartId")
                        .HasColumnType("integer");

                    b.Property<string>("Customization")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("EventId")
                        .HasColumnType("integer");

                    b.Property<int>("FreelancerUserId")
                        .HasColumnType("integer");

                    b.Property<string>("ProductColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("ProductImage")
                        .HasColumnType("bytea");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProductNumber")
                        .HasColumnType("integer");

                    b.Property<int>("ProductPrice")
                        .HasColumnType("integer");

                    b.Property<string>("ProductSize")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Reviews")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("EventId");

                    b.HasIndex("FreelancerUserId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Orion.Domain.Models.Sponsor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BusinessType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("DonationId")
                        .HasColumnType("integer");

                    b.Property<int?>("EventId")
                        .HasColumnType("integer");

                    b.Property<string>("SponsorAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SponsorEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SponsorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SponsorPhone")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DonationId");

                    b.HasIndex("EventId");

                    b.ToTable("Sponsors");
                });

            modelBuilder.Entity("Orion.Domain.Models.SponsorAdvertisement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdvertisementId")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int>("SponsorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisementId");

                    b.HasIndex("SponsorId");

                    b.ToTable("SponsorAdvertisements");
                });

            modelBuilder.Entity("Orion.Domain.Models.Supervisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("SupervisorInfo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("SupervisorPhoto")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("SupervisorRegion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SupervisorSkill")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Supervisors");
                });

            modelBuilder.Entity("Orion.Domain.Models.SupervisorOrphanage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OrphanageId")
                        .HasColumnType("integer");

                    b.Property<int>("SupervisorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrphanageId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("SupervisorOrphanage");
                });

            modelBuilder.Entity("Orion.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Orion.Domain.Models.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("VendorAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("Orion.Domain.Models.Website", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("OfficeWorkerId")
                        .HasColumnType("integer");

                    b.Property<string>("WebsiteName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OfficeWorkerId");

                    b.ToTable("Websites");
                });

            modelBuilder.Entity("CustomerEvent", b =>
                {
                    b.HasOne("Orion.Domain.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomersUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orion.Domain.Models.Event", null)
                        .WithMany()
                        .HasForeignKey("EventsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Orion.Domain.Models.Admin", b =>
                {
                    b.HasOne("Orion.Domain.Models.Website", "Website")
                        .WithOne("Admin")
                        .HasForeignKey("Orion.Domain.Models.Admin", "WebsiteId");

                    b.Navigation("Website");
                });

            modelBuilder.Entity("Orion.Domain.Models.Booth", b =>
                {
                    b.HasOne("Orion.Domain.Models.Event", "Event")
                        .WithOne("Booth")
                        .HasForeignKey("Orion.Domain.Models.Booth", "EventId");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("Orion.Domain.Models.BoothOrder", b =>
                {
                    b.HasOne("Orion.Domain.Models.Booth", "Booth")
                        .WithMany("BoothOrders")
                        .HasForeignKey("BoothId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orion.Domain.Models.Order", "Order")
                        .WithMany("BoothOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booth");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Orion.Domain.Models.Category", b =>
                {
                    b.HasOne("Orion.Domain.Models.Admin", "Admin")
                        .WithMany("Categories")
                        .HasForeignKey("AdminId");

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("Orion.Domain.Models.ContactUs", b =>
                {
                    b.HasOne("Orion.Domain.Models.Admin", "Admin")
                        .WithMany("ContactUses")
                        .HasForeignKey("AdminId");

                    b.HasOne("Orion.Domain.Models.Customer", "Customer")
                        .WithMany("ContactUses")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Admin");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Orion.Domain.Models.Customer", b =>
                {
                    b.HasOne("Orion.Domain.Models.Donation", "Donation")
                        .WithOne("Customer")
                        .HasForeignKey("Orion.Domain.Models.Customer", "DonationId");

                    b.HasOne("Orion.Domain.Models.Payment", "Payment")
                        .WithOne("Customer")
                        .HasForeignKey("Orion.Domain.Models.Customer", "PaymentId");

                    b.HasOne("Orion.Domain.Models.PreCommunity", "PreCommunity")
                        .WithMany("Customers")
                        .HasForeignKey("PreCommunityId");

                    b.HasOne("Orion.Domain.Models.User", null)
                        .WithOne("Customer")
                        .HasForeignKey("Orion.Domain.Models.Customer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orion.Domain.Models.Website", "Website")
                        .WithMany("Customers")
                        .HasForeignKey("WebsiteId");

                    b.Navigation("Donation");

                    b.Navigation("Payment");

                    b.Navigation("PreCommunity");

                    b.Navigation("Website");
                });

            modelBuilder.Entity("Orion.Domain.Models.CustomerAdvertisement", b =>
                {
                    b.HasOne("Orion.Domain.Models.Advertisement", "Advertisement")
                        .WithMany("CustomerAdvertisements")
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orion.Domain.Models.Customer", "Customer")
                        .WithMany("CustomerAdvertisements")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Advertisement");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Orion.Domain.Models.CustomerProduct", b =>
                {
                    b.HasOne("Orion.Domain.Models.Customer", "Customer")
                        .WithMany("CustomerProducts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orion.Domain.Models.Product", "Product")
                        .WithMany("CustomerProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Orion.Domain.Models.DeliveryOrder", b =>
                {
                    b.HasOne("Orion.Domain.Models.Delivery", "Delivery")
                        .WithMany("DeliveryOrders")
                        .HasForeignKey("DeliveryId");

                    b.HasOne("Orion.Domain.Models.Order", "Order")
                        .WithMany("DeliveryOrders")
                        .HasForeignKey("OrderId");

                    b.Navigation("Delivery");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Orion.Domain.Models.Device", b =>
                {
                    b.HasOne("Orion.Domain.Models.Admin", "Admin")
                        .WithOne("Device")
                        .HasForeignKey("Orion.Domain.Models.Device", "AdminId");

                    b.HasOne("Orion.Domain.Models.OfficeWorker", "OfficeWorker")
                        .WithOne("Device")
                        .HasForeignKey("Orion.Domain.Models.Device", "OfficeWorkerId");

                    b.Navigation("Admin");

                    b.Navigation("OfficeWorker");
                });

            modelBuilder.Entity("Orion.Domain.Models.Employee", b =>
                {
                    b.HasOne("Orion.Domain.Models.User", null)
                        .WithOne("Employee")
                        .HasForeignKey("Orion.Domain.Models.Employee", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Orion.Domain.Models.EmployeeAdmin", b =>
                {
                    b.HasOne("Orion.Domain.Models.Admin", "Admin")
                        .WithMany("EmployeeAdmins")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orion.Domain.Models.Employee", "Employee")
                        .WithMany("EmployeeAdmins")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Orion.Domain.Models.EmployeeOfficeWorker", b =>
                {
                    b.HasOne("Orion.Domain.Models.Employee", "Employee")
                        .WithMany("EmployeeOfficeWorkers")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orion.Domain.Models.OfficeWorker", "OfficeWorker")
                        .WithMany("EmployeeOfficeWorkers")
                        .HasForeignKey("OfficeWorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("OfficeWorker");
                });

            modelBuilder.Entity("Orion.Domain.Models.EmployeeSupervisor", b =>
                {
                    b.HasOne("Orion.Domain.Models.Employee", "Employee")
                        .WithMany("EmployeeSupervisors")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orion.Domain.Models.Supervisor", "Supervisor")
                        .WithMany("EmployeeSupervisors")
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("Orion.Domain.Models.Feedback", b =>
                {
                    b.HasOne("Orion.Domain.Models.Admin", "Admin")
                        .WithMany("Feedbacks")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orion.Domain.Models.Customer", "Customer")
                        .WithMany("Feedbacks")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orion.Domain.Models.OfficeWorker", "OfficeWorker")
                        .WithMany("Feedbacks")
                        .HasForeignKey("OfficeWorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Customer");

                    b.Navigation("OfficeWorker");
                });

            modelBuilder.Entity("Orion.Domain.Models.Freelancer", b =>
                {
                    b.HasOne("Orion.Domain.Models.Orphanage", "Orphanage")
                        .WithMany("Freelancers")
                        .HasForeignKey("OrphanageId");

                    b.HasOne("Orion.Domain.Models.Supervisor", "Supervisor")
                        .WithMany("Freelancers")
                        .HasForeignKey("SupervisorId");

                    b.HasOne("Orion.Domain.Models.User", null)
                        .WithOne("Freelancer")
                        .HasForeignKey("Orion.Domain.Models.Freelancer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orphanage");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("Orion.Domain.Models.MaterialVendor", b =>
                {
                    b.HasOne("Orion.Domain.Models.Material", "Material")
                        .WithMany("MaterialVendors")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orion.Domain.Models.Vendor", "Vendor")
                        .WithMany("MaterialVendors")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Orion.Domain.Models.Mentor", b =>
                {
                    b.HasOne("Orion.Domain.Models.Craft", "Craft")
                        .WithMany("Mentors")
                        .HasForeignKey("CraftId");

                    b.HasOne("Orion.Domain.Models.User", null)
                        .WithOne("Mentor")
                        .HasForeignKey("Orion.Domain.Models.Mentor", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Craft");
                });

            modelBuilder.Entity("Orion.Domain.Models.Order", b =>
                {
                    b.HasOne("Orion.Domain.Models.Customer", "Customer")
                        .WithOne("Order")
                        .HasForeignKey("Orion.Domain.Models.Order", "CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Orion.Domain.Models.Product", b =>
                {
                    b.HasOne("Orion.Domain.Models.Cart", "Cart")
                        .WithMany("Products")
                        .HasForeignKey("CartId");

                    b.HasOne("Orion.Domain.Models.Event", "Event")
                        .WithMany("Products")
                        .HasForeignKey("EventId");

                    b.HasOne("Orion.Domain.Models.Freelancer", "Freelancer")
                        .WithMany("Products")
                        .HasForeignKey("FreelancerUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orion.Domain.Models.Supervisor", "Supervisor")
                        .WithMany("Products")
                        .HasForeignKey("SupervisorId");

                    b.Navigation("Cart");

                    b.Navigation("Event");

                    b.Navigation("Freelancer");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("Orion.Domain.Models.Sponsor", b =>
                {
                    b.HasOne("Orion.Domain.Models.Donation", "Donation")
                        .WithMany("Sponsors")
                        .HasForeignKey("DonationId");

                    b.HasOne("Orion.Domain.Models.Event", "Event")
                        .WithMany("Sponsors")
                        .HasForeignKey("EventId");

                    b.Navigation("Donation");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("Orion.Domain.Models.SponsorAdvertisement", b =>
                {
                    b.HasOne("Orion.Domain.Models.Advertisement", "Advertisement")
                        .WithMany("SponsorAdvertisements")
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orion.Domain.Models.Sponsor", "Sponsor")
                        .WithMany("SponsorAdvertisements")
                        .HasForeignKey("SponsorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Advertisement");

                    b.Navigation("Sponsor");
                });

            modelBuilder.Entity("Orion.Domain.Models.SupervisorOrphanage", b =>
                {
                    b.HasOne("Orion.Domain.Models.Orphanage", "Orphanage")
                        .WithMany("SupervisorOrphanages")
                        .HasForeignKey("OrphanageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orion.Domain.Models.Supervisor", "Supervisor")
                        .WithMany("SupervisorOrphanages")
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orphanage");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("Orion.Domain.Models.Website", b =>
                {
                    b.HasOne("Orion.Domain.Models.OfficeWorker", "OfficeWorker")
                        .WithMany("Websites")
                        .HasForeignKey("OfficeWorkerId");

                    b.Navigation("OfficeWorker");
                });

            modelBuilder.Entity("Orion.Domain.Models.Admin", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("ContactUses");

                    b.Navigation("Device")
                        .IsRequired();

                    b.Navigation("EmployeeAdmins");

                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("Orion.Domain.Models.Advertisement", b =>
                {
                    b.Navigation("CustomerAdvertisements");

                    b.Navigation("SponsorAdvertisements");
                });

            modelBuilder.Entity("Orion.Domain.Models.Booth", b =>
                {
                    b.Navigation("BoothOrders");
                });

            modelBuilder.Entity("Orion.Domain.Models.Cart", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Orion.Domain.Models.Craft", b =>
                {
                    b.Navigation("Mentors");
                });

            modelBuilder.Entity("Orion.Domain.Models.Customer", b =>
                {
                    b.Navigation("ContactUses");

                    b.Navigation("CustomerAdvertisements");

                    b.Navigation("CustomerProducts");

                    b.Navigation("Feedbacks");

                    b.Navigation("Order")
                        .IsRequired();
                });

            modelBuilder.Entity("Orion.Domain.Models.Delivery", b =>
                {
                    b.Navigation("DeliveryOrders");
                });

            modelBuilder.Entity("Orion.Domain.Models.Donation", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();

                    b.Navigation("Sponsors");
                });

            modelBuilder.Entity("Orion.Domain.Models.Employee", b =>
                {
                    b.Navigation("EmployeeAdmins");

                    b.Navigation("EmployeeOfficeWorkers");

                    b.Navigation("EmployeeSupervisors");
                });

            modelBuilder.Entity("Orion.Domain.Models.Event", b =>
                {
                    b.Navigation("Booth")
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("Sponsors");
                });

            modelBuilder.Entity("Orion.Domain.Models.Freelancer", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Orion.Domain.Models.Material", b =>
                {
                    b.Navigation("MaterialVendors");
                });

            modelBuilder.Entity("Orion.Domain.Models.OfficeWorker", b =>
                {
                    b.Navigation("Device")
                        .IsRequired();

                    b.Navigation("EmployeeOfficeWorkers");

                    b.Navigation("Feedbacks");

                    b.Navigation("Websites");
                });

            modelBuilder.Entity("Orion.Domain.Models.Order", b =>
                {
                    b.Navigation("BoothOrders");

                    b.Navigation("DeliveryOrders");
                });

            modelBuilder.Entity("Orion.Domain.Models.Orphanage", b =>
                {
                    b.Navigation("Freelancers");

                    b.Navigation("SupervisorOrphanages");
                });

            modelBuilder.Entity("Orion.Domain.Models.Payment", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();
                });

            modelBuilder.Entity("Orion.Domain.Models.PreCommunity", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("Orion.Domain.Models.Product", b =>
                {
                    b.Navigation("CustomerProducts");
                });

            modelBuilder.Entity("Orion.Domain.Models.Sponsor", b =>
                {
                    b.Navigation("SponsorAdvertisements");
                });

            modelBuilder.Entity("Orion.Domain.Models.Supervisor", b =>
                {
                    b.Navigation("EmployeeSupervisors");

                    b.Navigation("Freelancers");

                    b.Navigation("Products");

                    b.Navigation("SupervisorOrphanages");
                });

            modelBuilder.Entity("Orion.Domain.Models.User", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();

                    b.Navigation("Employee")
                        .IsRequired();

                    b.Navigation("Freelancer")
                        .IsRequired();

                    b.Navigation("Mentor")
                        .IsRequired();
                });

            modelBuilder.Entity("Orion.Domain.Models.Vendor", b =>
                {
                    b.Navigation("MaterialVendors");
                });

            modelBuilder.Entity("Orion.Domain.Models.Website", b =>
                {
                    b.Navigation("Admin")
                        .IsRequired();

                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
